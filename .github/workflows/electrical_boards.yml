name: "electrical_boards"

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/electrical_boards.yml'
      - '.github/workflows/convert_bottom_position.py'
      - 'Electrical/Design/**'

permissions:
  contents: write
  pages: write
  id-token: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  generate-artifacts:
    name: kicad export
    runs-on: ubuntu-latest
    container: "ghcr.io/inti-cmnb/kicad9_auto_full:latest"    
    strategy:
      fail-fast: false
      matrix:
        board:
        - 'PCBA-DEBUG-ACCESSORY'
        - 'PCBA-DEBUG-UART'
        - 'PCBA-INTERFACE'
        - 'PCBA-BU16'
        - 'PCBA-BU16-SPACER'
        - 'PCBA-BU16-PLATE'
        - 'PCBA-PO16'
        - 'PCBA-PBF4'
        - 'PCBA-PBF4-SPACER'
        - 'PCBA-PBF4-PLATE'
        - 'PCBA-EN16'
        - 'PCBA-EF44'
        - 'PCBA-TEK2'
        - 'PCBA-VSNX'
        - 'PCBA-VSNX-SPACER'
        - 'PCBA-VSNX-PLATE'
        - 'PCBA-VSNX-LCDMOUNT'
        - 'FP-XX16'
        - 'FP-BU16'
        - 'FP-PBF4'
        - 'FP-EF44'
        - 'FP-VSN1-L'
        - 'FP-VSN1-R'
        - 'FP-TEK2'
        - 'FP-VSN2'
        - 'FP-BU16-MIDIGRADE'
        - 'FP-EN16-MIDIGRADE'
        - 'FP-XX16-TEST'
        - 'FP-TEK2-CLASSIC'
        - 'FP-PBF4-CLASSIC'
        - 'FP-TEK2-HACK'

    steps:
    - uses: actions/checkout@v2

    - name: Run PCB stuff
      run: |
        make -C Electrical/Design/${{ matrix.board }}

    - name: Print errors
      if: ${{ always() }}
      run: |
        FILE=Electrical/Design/${{ matrix.board }}/mfg-bot/${{ matrix.board }}-drc.html
        if [ -f "$FILE" ]; then
          cat "$FILE"
        else
          echo "DRC file for ${{ matrix.board }} does not exist."
        fi
        cat Electrical/Design/${{ matrix.board }}/kibot_error.log

    - name: Set Date
      run: echo "action_date=$(date +'%Y-%m-%d-%H%M')" >> $GITHUB_ENV

    - name: Convert position file
      run: |
        python3 .github/workflows/convert_bottom_position.py ../../Electrical/Design/${{ matrix.board }}/mfg-bot/mfg/${{ matrix.board }}-both_pos.csv ../../Electrical/Design/${{ matrix.board }}/mfg-bot/mfg/${{ matrix.board }}-both_pos_fixed.csv
        rm Electrical/Design/${{ matrix.board }}/mfg-bot/mfg/${{ matrix.board }}-both_pos.csv
  
    - name: Zipping gerber      
      uses: vimtor/action-zip@v1
      with:
        files: Electrical/Design/${{ matrix.board }}/mfg-bot/JLCPCB
        dest: Electrical/Design/${{ matrix.board }}/mfg-bot/mfg/${{ matrix.board }}-gerber.zip

    - name: Rename pdf files and removing non-zipped gerber files
      run: |
        mv Electrical/Design/${{ matrix.board }}/mfg-bot/${{ matrix.board }}-erc.html Electrical/Design/${{ matrix.board }}/mfg-bot/${{ matrix.board }}_erc.html
        FILE=Electrical/Design/${{ matrix.board }}/mfg-bot/${{ matrix.board }}-drc.html
        if [ -f "$FILE" ]; then
          mv Electrical/Design/${{ matrix.board }}/mfg-bot/${{ matrix.board }}-drc.html Electrical/Design/${{ matrix.board }}/mfg-bot/${{ matrix.board }}_drc.html
        else
          echo "DRC file for ${{ matrix.board }} does not exist."
        fi
        mv Electrical/Design/${{ matrix.board }}/mfg-bot/Schematic.pdf Electrical/Design/${{ matrix.board }}/mfg-bot/${{ matrix.board }}_Schematic.pdf
        mv Electrical/Design/${{ matrix.board }}/mfg-bot/PCB_Top.pdf Electrical/Design/${{ matrix.board }}/mfg-bot/${{ matrix.board }}_PCB_Top.pdf
        mv Electrical/Design/${{ matrix.board }}/mfg-bot/PCB_Bottom.pdf Electrical/Design/${{ matrix.board }}/mfg-bot/${{ matrix.board }}_PCB_Bottom.pdf
        mv Electrical/Design/${{ matrix.board }}/mfg-bot/kibot_errors.filter Electrical/Design/${{ matrix.board }}/mfg-bot/${{ matrix.board }}_kibot_errors.filter
        mv Electrical/Design/${{ matrix.board }}/kibot_error.log Electrical/Design/${{ matrix.board }}/mfg-bot/${{ matrix.board }}_kibot_error.log
        
        rm -r Electrical/Design/${{ matrix.board }}/mfg-bot/JLCPCB

    - name: Upload results
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: "result_${{ matrix.board }}_${{ env.action_date }}"
        path: |
          Electrical/Design/${{ matrix.board }}/mfg-bot/
        if-no-files-found: warn

  deploy-results:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: generate-artifacts    
    steps:
      - uses: actions/checkout@v2
        with:
          ref: preview

      - name: Download reports' artifacts
        uses: actions/download-artifact@v4
        with:
          path: download

      - name: Collecting files
        run: |

          # Create the temp folder if it doesn't exist
          mkdir -p Preview/Electrical

          # Loop through each subdirectory in the download folder
          for subdirectory in download/*; do
              # Check if it is a directory
              if [ -d "$subdirectory" ]; then
                  # Copy the contents of the subdirectory to the temp folder
                  cp -r "$subdirectory"/* "Preview/Electrical/"
              fi
          done

      - name: Commit the files
        run: |        
          git config --global user.name ${{ github.actor }}
          git config --global user.email ${{ github.actor }}@users.noreply.github.com  
          git add Preview/*
          git commit -m "BOT ${{ github.workflow }} ${{ github.sha }}"
          git push

  deploy-assets:
    if: github.ref == 'refs/heads/master'
    needs: deploy-results 
    environment:
      name: electrical_deployment
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Download reports' artifacts
        uses: actions/download-artifact@v4
        with:
          path: download

      - name: Collecting files
        run: |

          # Create the temp folder if it doesn't exist
          mkdir -p temp

          # Loop through each subdirectory in the download folder
          for subdirectory in download/*; do
              # Check if it is a directory
              if [ -d "$subdirectory" ]; then
                  # Copy the contents of the subdirectory to the temp folder
                  cp -r "$subdirectory"/* "temp/"
              fi
          done

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './temp/'
          name: electrical_deployment

      - name: Deploy to GitHub Pages
        id: electrical_deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: electrical_deployment
